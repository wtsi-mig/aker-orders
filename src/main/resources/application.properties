# Master DB credentials
db.username=root
db.password=
db.host=localhost
db.port=3306
db.name=aker_orders

# Tomcat server
server.port=8083

# JPA (JpaBaseConfiguration, HibernateJpaAutoConfiguration)
spring.jpa.generate-ddl=true
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

# Other properties to set on the JPA connection, if desired (see Spring Boot Reference guide (Appendix-A)
# spring.jpa.properties.*=
# spring.jpa.openInView=trues
# spring.jpa.database-platform=
# spring.jpa.database=
# spring.jpa.hibernate.naming-strategy=
# naming classname
# spring.jpa.hibernate.ddl-auto=
# defaults to create-drop for embedded dbs

# DataSourceAutoConfiguration
spring.datasource.name=store
spring.datasource.driverClassName=com.mysql.jdbc.Driver
spring.datasource.url=jdbc:mysql://${db.host}:${db.port}/${db.name}
spring.datasource.username=${db.username}
spring.datasource.password=${db.password}
spring.datasource.validation-query=select * from dual

# Advanced configuration...
# Can pre-populate with SQL loader script is required
# spring.datasource.intialize=false # populate using data.sql
# spring.datasource.schema=# a schema resource reference
# spring.datasource.platform=# the platform to use in the schema resource (schema-${platform}.sql)
# continue even if can't be initialized
spring.datasource.continueOnError=false
# spring.datasource.separator=;# statement separator in SQL initialization scripts